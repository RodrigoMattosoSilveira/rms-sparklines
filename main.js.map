{"version":3,"sources":["webpack:////home/travis/build/RodrigoMattosoSilveira/rms-sparklines/dist/library/fesm5/library.js","webpack:////home/travis/build/RodrigoMattosoSilveira/rms-sparklines/dist/library/library.d.ts.SparkBarchartComponent.html","webpack:////home/travis/build/RodrigoMattosoSilveira/rms-sparklines/dist/library/library.d.ts.SparkBoxplotComponent.html","webpack:////home/travis/build/RodrigoMattosoSilveira/rms-sparklines/dist/library/library.d.ts.SparkLineComponent.html","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/barchart/barchart.component.html","webpack:///./src/app/barchart/barchart.component.ts","webpack:///./src/app/boxplot/boxplot.component.html","webpack:///./src/app/boxplot/boxplot.component.ts","webpack:///./src/app/inline/inline.component.html","webpack:///./src/app/inline/inline.component.ts","webpack:///./src/app/inline/spark-line-decoration/spark-line-decoration.component.html","webpack:///./src/app/inline/spark-line-decoration/spark-line-decoration.component.ts","webpack:///./src/app/inline/spark-line-shade/spark-line-shade.component.html","webpack:///./src/app/inline/spark-line-shade/spark-line-shade.component.ts","webpack:///./src/app/inline/spark-line-simple/spark-line-simple.component.html","webpack:///./src/app/inline/spark-line-simple/spark-line-simple.component.ts","webpack:///./src/app/landing-page/landing-page.component.html","webpack:///./src/app/landing-page/landing-page.component.ts","webpack:///./src/app/utils/angular-material-module/angular-material-module.module.ts","webpack:///./src/app/utils/services/living-style-guide.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACmE;AAClE;;AAElC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,iDAAiD,WAAW;AAC5D,wDAAwD,sEAAgB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;AACnM;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,kDAAkD,WAAW;AAC7D,yDAAyD,sEAAgB,EAAE,8CAA8C,8BAA8B,EAAE,8CAA8C;AACvM;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS;AACT,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,0BAA0B;AAC3D,2BAA2B,OAAO,uDAAS,8BAA8B;AACzE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,iDAAiD,WAAW;AAC5D,wDAAwD,sEAAgB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;AACnM;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD;AACxD,SAAS;AACT,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,0BAA0B;AAC3D,2BAA2B,OAAO,uDAAS,8BAA8B;AACzE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,iGAAiG,sDAAQ;AACzG,mBAAmB,EAAE;AACrB;AACA,uBAAuB,mCAAmC;AAC1D;AACA,uBAAuB,EAAE;AACzB,wBAAwB,uDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA,wCAAwC,uDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mCAAmC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uCAAuC;AAClE;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,8CAA8C,WAAW;AACzD,qDAAqD,sEAAgB,EAAE,0CAA0C,0BAA0B,EAAE,0CAA0C;AACvL;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qDAAqD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","file":"main.js","sourcesContent":["import { __spread } from 'tslib';\nimport { Injectable, NgModule, Component, Input, ViewChild, defineInjectable } from '@angular/core';\nimport { multiply } from 'mathjs';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar LibraryService = /** @class */ (function () {\n    function LibraryService() {\n    }\n    LibraryService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root'\n                },] }\n    ];\n    /** @nocollapse */\n    LibraryService.ctorParameters = function () { return []; };\n    /** @nocollapse */ LibraryService.ngInjectableDef = defineInjectable({ factory: function LibraryService_Factory() { return new LibraryService(); }, token: LibraryService, providedIn: \"root\" });\n    return LibraryService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar BarchartService = /** @class */ (function () {\n    function BarchartService() {\n    }\n    /**\n     * @param {?} sparklineCanvas\n     * @param {?} lineColor\n     * @return {?}\n     */\n    BarchartService.prototype.draw = /**\n     * @param {?} sparklineCanvas\n     * @param {?} lineColor\n     * @return {?}\n     */\n    function (sparklineCanvas, lineColor) {\n        /** @type {?} */\n        var ctx = sparklineCanvas.nativeElement.getContext('2d');\n        // Draw\n        ctx.fillStyle = lineColor;\n        ctx.fillRect(20, 20, 150, 100);\n    };\n    BarchartService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root'\n                },] }\n    ];\n    /** @nocollapse */\n    BarchartService.ctorParameters = function () { return []; };\n    /** @nocollapse */ BarchartService.ngInjectableDef = defineInjectable({ factory: function BarchartService_Factory() { return new BarchartService(); }, token: BarchartService, providedIn: \"root\" });\n    return BarchartService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar SparkBarchartComponent = /** @class */ (function () {\n    function SparkBarchartComponent(barchartService) {\n        this.barchartService = barchartService;\n    }\n    // see https://blog.angular-university.io/angular-viewchild/\n    // for recommendation to use ngAfterViewInit instead of ngOnInit\n    // see https://blog.angular-university.io/angular-viewchild/\n    // for recommendation to use ngAfterViewInit instead of ngOnInit\n    /**\n     * @return {?}\n     */\n    SparkBarchartComponent.prototype.ngAfterViewInit = \n    // see https://blog.angular-university.io/angular-viewchild/\n    // for recommendation to use ngAfterViewInit instead of ngOnInit\n    /**\n     * @return {?}\n     */\n    function () {\n        this.barchartService.draw(this.sparklineCanvas, this.lineColor);\n    };\n    SparkBarchartComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'rms-spark-barchart',\n                    template: \"<canvas #sparklineCanvas width=\\\"128\\\" height=\\\"64\\\"></canvas>\\n\",\n                    styles: [\"\"]\n                }] }\n    ];\n    /** @nocollapse */\n    SparkBarchartComponent.ctorParameters = function () { return [\n        { type: BarchartService }\n    ]; };\n    SparkBarchartComponent.propDecorators = {\n        lineColor: [{ type: Input, args: ['spark_color',] }],\n        sparklineCanvas: [{ type: ViewChild, args: ['sparklineCanvas',] }]\n    };\n    return SparkBarchartComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar BoxplotService = /** @class */ (function () {\n    function BoxplotService() {\n    }\n    /**\n     * @param {?} sparklineCanvas\n     * @param {?} lineColor\n     * @return {?}\n     */\n    BoxplotService.prototype.draw = /**\n     * @param {?} sparklineCanvas\n     * @param {?} lineColor\n     * @return {?}\n     */\n    function (sparklineCanvas, lineColor) {\n        /** @type {?} */\n        var ctx = sparklineCanvas.nativeElement.getContext('2d');\n        // Draw\n        ctx.fillStyle = lineColor;\n        ctx.fillRect(20, 20, 150, 100);\n    };\n    BoxplotService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root'\n                },] }\n    ];\n    /** @nocollapse */\n    BoxplotService.ctorParameters = function () { return []; };\n    /** @nocollapse */ BoxplotService.ngInjectableDef = defineInjectable({ factory: function BoxplotService_Factory() { return new BoxplotService(); }, token: BoxplotService, providedIn: \"root\" });\n    return BoxplotService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar SparkBoxplotComponent = /** @class */ (function () {\n    function SparkBoxplotComponent(boxplotService) {\n        this.boxplotService = boxplotService;\n    }\n    // see https://blog.angular-university.io/angular-viewchild/\n    // for recommendation to use ngAfterViewInit instead of ngOnInit\n    // see https://blog.angular-university.io/angular-viewchild/\n    // for recommendation to use ngAfterViewInit instead of ngOnInit\n    /**\n     * @return {?}\n     */\n    SparkBoxplotComponent.prototype.ngAfterViewInit = \n    // see https://blog.angular-university.io/angular-viewchild/\n    // for recommendation to use ngAfterViewInit instead of ngOnInit\n    /**\n     * @return {?}\n     */\n    function () {\n        this.boxplotService.draw(this.sparklineCanvas, this.lineColor);\n    };\n    SparkBoxplotComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'rms-spark-boxplot',\n                    template: \"<canvas #sparklineCanvas width=\\\"128\\\" height=\\\"64\\\"></canvas>\\n\",\n                    styles: [\"\"]\n                }] }\n    ];\n    /** @nocollapse */\n    SparkBoxplotComponent.ctorParameters = function () { return [\n        { type: BoxplotService }\n    ]; };\n    SparkBoxplotComponent.propDecorators = {\n        lineColor: [{ type: Input, args: ['spark_color',] }],\n        sparklineCanvas: [{ type: ViewChild, args: ['sparklineCanvas',] }]\n    };\n    return SparkBoxplotComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar LineService = /** @class */ (function () {\n    function LineService() {\n        // Local attributes\n        this.attributes = {};\n        this.coordinatesViewport = [];\n        this.coordinatesCanvas = [];\n        this.coordinatesTips = [];\n        this.decorationPointsArray = [];\n    }\n    /**\n     * @param {?} sparklineCanvas\n     * @param {?} lineColor\n     * @return {?}\n     */\n    LineService.prototype.draw = /**\n     * @param {?} sparklineCanvas\n     * @param {?} lineColor\n     * @return {?}\n     */\n    function (sparklineCanvas, lineColor) {\n        /** @type {?} */\n        var ctx = sparklineCanvas.nativeElement.getContext('2d');\n        // Draw\n        ctx.fillStyle = lineColor;\n        ctx.fillRect(20, 20, 150, 100);\n    };\n    /**\n     * @return {?}\n     */\n    LineService.handleMouseOut = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var tooltip = document.getElementById('rms-sparkline-inline-tooltip');\n        if (tooltip) {\n            // console.log(`SparklineLine::handleMouseMove deleting tooltip`);\n            tooltip.parentElement.removeChild(tooltip);\n        }\n    };\n    /**\n     * @param {?} className\n     * @param {?} decorationPoints\n     * @param {?} dotRadius\n     * @param {?} height\n     * @param {?} lineColor\n     * @param {?} linePoints\n     * @param {?} lineWidth\n     * @param {?} shadeColor\n     * @param {?} sparklineCanvas\n     * @param {?} width\n     * @return {?}\n     */\n    LineService.prototype.draw1 = /**\n     * @param {?} className\n     * @param {?} decorationPoints\n     * @param {?} dotRadius\n     * @param {?} height\n     * @param {?} lineColor\n     * @param {?} linePoints\n     * @param {?} lineWidth\n     * @param {?} shadeColor\n     * @param {?} sparklineCanvas\n     * @param {?} width\n     * @return {?}\n     */\n    function (className, decorationPoints, dotRadius, height, lineColor, linePoints, lineWidth, shadeColor, sparklineCanvas, width) {\n        // Save attributes\n        this.attributes['className'] = className;\n        this.attributes['decorationPoints'] = decorationPoints;\n        this.attributes['dotRadius'] = dotRadius;\n        this.attributes['height'] = height;\n        this.attributes['lineColor'] = lineColor;\n        this.attributes['linePoints'] = linePoints;\n        this.attributes['lineWidth'] = lineWidth;\n        this.attributes['shadeColor'] = shadeColor;\n        this.attributes['sparklineCanvas'] = sparklineCanvas;\n        this.attributes['width'] = width;\n        console.log(\"LineService::draw ctx: \" + this.attributes.ctx);\n        console.log(\"LineService::draw className: \" + this.attributes.className);\n        console.log(\"LineService::draw decorationPoints: \" + JSON.stringify(this.attributes.decorationPoints));\n        console.log(\"LineService::draw dotRadius: \" + this.attributes.dotRadius);\n        console.log(\"LineService::draw height: \" + this.attributes.height);\n        console.log(\"LineService::draw lineColor: \" + this.attributes.lineColor);\n        console.log(\"LineService::draw linePoints: \" + JSON.stringify(this.attributes.linePoints));\n        console.log(\"LineService::draw lineWidth: \" + this.attributes.lineWidth);\n        console.log(\"LineService::draw shadeColor: \" + this.attributes.shadeColor);\n        console.log(\"LineService::draw toolTip: \" + this.attributes.toolTip);\n        console.log(\"LineService::draw width: \" + this.attributes.width);\n        /** @type {?} */\n        var ctx = sparklineCanvas.nativeElement.getContext('2d');\n        /**\n         * Build coordinatesWorld\n         *\n         * Note thatwe add the 0 point the start, and the zero point at the end.\n         * This is required for the proper drawing of the shade if necessary. These point\n         * are removed before the actual line is drawn\n         */\n        this.measurementsArray = this.attributes.linePoints.slice(0);\n        this.coordinatesWorld = [];\n        for (var i = 0; i < this.measurementsArray.length; i++) {\n            this.coordinatesWorld.push([i, this.measurementsArray[i], 1]);\n            // console.log(`coordinatesWorld(` + i +`): ` + JSON.stringify(this.coordinatesWorld[i]));\n        }\n        // console.log(`coordinatesWorld: ` + JSON.stringify(this.coordinatesWorld));\n        /**\n         * Build coordinatesViewPort\n         * The sparkline is drawn on the canvas viewport, a subset of the canvas\n         * drawing area, with padding between the two to make room for drawing\n         * decoration shapes, when necessary.\n         */\n        this.coordinatesViewport = [];\n        /** @type {?} */\n        var sX = (this.attributes.width - this.attributes.dotRadius * 2) / this.measurementsArray.length;\n        /** @type {?} */\n        var sY = (this.attributes.height - this.attributes.dotRadius * 2) / Math.max.apply(Math, __spread(this.measurementsArray));\n        /** @type {?} */\n        var worldToViewport = [[sX, 0, 0], [0, sY, 0], [0, 0, 1]];\n        for (var i = 0; i < this.measurementsArray.length; i++) {\n            // From world to viewport\n            /** @type {?} */\n            var temp1 = multiply(this.coordinatesWorld[i], worldToViewport);\n            // console.log(`coordinatesViewport temp1(` + i +`): ` + JSON.stringify(temp1));\n            this.coordinatesViewport.push(temp1);\n        }\n        // console.log(`coordinatesViewport: ` + JSON.stringify(this.coordinatesViewport));\n        /**\n         * Build coordinatesCanvas\n         * The world coordinates origin is at the bottom left, whereas the canvas and\n         * canvasViewport coordinates origin is at the top left, requiring the\n         * translation from bottom left to top left origin.\n         *\n         * Since canvas drawing always uses the canvas coordinates and the\n         * canvasViewport amounts to a padding around the canvas, a translation is\n         * required to move the canvasViewport coordinates:\n         */\n        this.coordinatesCanvas = [];\n        /** @type {?} */\n        var dX = this.attributes.dotRadius;\n        /** @type {?} */\n        var myHeight = this.attributes.height - this.attributes.dotRadius;\n        /** @type {?} */\n        var bottomLeftToTopLeft = [[1, 0, 0], [0, 1, 0], [dX, 0, 1]];\n        for (var i = 0; i < this.measurementsArray.length; i++) {\n            // Tricky calculation ... we want the delta to move the current coordinate\n            // const dY = myHeight - 2 * this.coordinatesViewport[i][1];\n            // console.log(`coordinatesCanvas dY(` + i +`): ` + myHeight - 2 * this.coordinatesViewport[i][1]);\n            bottomLeftToTopLeft[2][1] = myHeight - 2 * this.coordinatesViewport[i][1];\n            // console.log(`coordinatesCanvas bottomLeftToTopLeft(` + i +`): ` + JSON.stringify(bottomLeftToTopLeft));\n            this.coordinatesCanvas.push(multiply(this.coordinatesViewport[i], bottomLeftToTopLeft));\n        }\n        // console.log(`coordinatesViewport: ` + JSON.stringify(this.coordinatesViewport));\n        /**\n         * Now we draw the sparkline, in the following order\n         * - Shaded ared\n         * - line\n         * - decorations\n         */\n        ctx.clearRect(0, 0, this.attributes.width, this.attributes.height);\n        // console.log(`shadeColor: ` + this.attributes.shadeColor);\n        if (this.attributes.shadeColor) {\n            // Fill up the area\n            ctx.beginPath();\n            ctx.fillStyle = this.attributes.shadeColor;\n            ctx.moveTo(this.coordinatesCanvas[0][0], this.attributes.height);\n            for (var i = 0; i < this.measurementsArray.length; i++) {\n                ctx.lineTo(this.coordinatesCanvas[i][0], this.coordinatesCanvas[i][1]);\n                // console.log(`drawing(` + i +`): ` + JSON.stringify(this.coordinatesCanvas[i]));\n            }\n            ctx.lineTo(this.coordinatesCanvas[this.measurementsArray.length - 1][0], this.attributes.height);\n            ctx.fill();\n        }\n        // Draw the path, on top of the shade area\n        // https://www.w3schools.com/graphics/canvas_coordinates.asp\n        ctx.beginPath();\n        ctx.lineWidth = this.attributes.lineWidth;\n        ctx.strokeStyle = this.attributes.lineColor;\n        ctx.moveTo(this.coordinatesCanvas[0][0], this.coordinatesCanvas[0][1]);\n        for (var i = 1; i < this.measurementsArray.length; i++) {\n            ctx.lineTo(this.coordinatesCanvas[i][0], this.coordinatesCanvas[i][1]);\n            // console.log(`drawing(` + i +`): ` + JSON.stringify(this.coordinatesCanvas[i]));\n        }\n        ctx.stroke();\n        /**\n         * Draw decorations\n         */\n        this.decorationPointsArray = this.attributes.decorationPoints.slice(0);\n        if (this.attributes.dotRadius > 0 && this.decorationPointsArray.length > 0) {\n            // console.log('decorationPoints = ' + JSON.stringify(this.attributes.decorationPoints));\n            for (var i = 0; i < this.decorationPointsArray.length; i++) {\n                // todo: a hack to solve a problem when running inside vaadin-grid\n                if (this.decorationPointsArray[i]['index'] > this.measurementsArray.length - 1) ;\n                else {\n                    ctx.beginPath();\n                    /** @type {?} */\n                    var index = this.decorationPointsArray[i]['index'];\n                    ctx.arc(this.coordinatesCanvas[index][0], this.coordinatesCanvas[index][1], this.attributes.dotRadius, 0, Math.PI * 2);\n                    ctx.fillStyle = this.decorationPointsArray[i]['color'];\n                    ctx.fill();\n                }\n            }\n        }\n        /**\n         * Add tooltip support.\n         * Build coordinateScreen\n         */\n        // const rect: any = this.attributes.canvasEl.getBoundingClientRect();\n        // console.log(`SparklineLine::canvasEl rect.left: ` + rect.left + `, rect.top: ` + rect.top);\n        //\n        // this.canvasScreenOffsetX = rect.left + window.pageXOffset || document.documentElement.scrollLeft;\n        // this.canvasScreenOffsetY = rect.top + window.pageYOffset || document.documentElement.scrollTop;\n        // console.log(`canvasScreenOffsetX: ` + this.canvasScreenOffsetX);\n        // console.log(`canvasScreenOffsetY: ` + this.canvasScreenOffsetY);\n        this.coordinatesTips = [];\n        for (var i = 0; i < this.measurementsArray.length; i++) {\n            this.coordinatesTips.push({\n                x: this.coordinatesCanvas[i][0],\n                y: this.coordinatesCanvas[i][1],\n                r: 5,\n                rXr: 25,\n                color: 'red',\n                tip: this.measurementsArray[i]\n            });\n            // console.log(`coordinatesTips(` + i +`): ` + JSON.stringify(this.coordinatesTips[i]));\n        }\n    };\n    /**\n     * Sparkline Inline Mouse Move Handler\n     * @param $event\n     * @param canvasEl\n     */\n    /**\n     * Sparkline Inline Mouse Move Handler\n     * @param {?} $event\n     * @param {?} canvasEl\n     * @return {?}\n     */\n    LineService.prototype.handleMouseMove = /**\n     * Sparkline Inline Mouse Move Handler\n     * @param {?} $event\n     * @param {?} canvasEl\n     * @return {?}\n     */\n    function ($event, canvasEl) {\n        /** @type {?} */\n        var body;\n        /** @type {?} */\n        var mySpan;\n        /** @type {?} */\n        var fontDefinition = '12px FUTURA';\n        /** @type {?} */\n        var width;\n        /** @type {?} */\n        var height;\n        /** @type {?} */\n        var scrollLeft;\n        /** @type {?} */\n        var scrollTop;\n        /** @type {?} */\n        var rect;\n        /** @type {?} */\n        var mouseX;\n        /** @type {?} */\n        var mouseY;\n        /** @type {?} */\n        var tooltip;\n        // console.log(`\\n`);\n        // Get the position of the canvas element relative to the document\n        // https://plainjs.com/javascript/styles/get-the-position-of-an-element-relative-to-the-document-24/\n        rect = canvasEl.getBoundingClientRect();\n        scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n        scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        rect = { left: rect.left + scrollLeft, top: rect.top + scrollTop };\n        // Get the mouse coordinates relative to the canvas\n        mouseX = $event.clientX - rect.left;\n        mouseY = $event.clientY - rect.top;\n        // Debug code\n        // let msg: string;\n        // msg = '';\n        // msg += `rect.left: ` + rect.left.toFixed(2);\n        // msg += `, rect.top: ` + rect.top.toFixed(2);\n        // msg += `, rect.width: ` + rect.width.toFixed(2);\n        // msg += `, rect.height: ` + rect.height.toFixed(2);\n        // console.log(msg);\n        // msg = '';\n        // msg += `$event.clientX: ` + $event.clientX.toFixed(2);\n        // msg += `, $event.clientY: ` + $event.clientY.toFixed(2);\n        // console.log(msg);\n        // msg = '';\n        // msg += `dot.x: ` + this.coordinatesTips[0].x.toFixed(2);\n        // msg += `, dot.y: ` + this.coordinatesTips[0].y.toFixed(2);\n        // console.log(msg);\n        // msg = '';\n        // msg += `mouseX: ` + mouseX.toFixed(2);\n        // msg += `, mouseY: ` + mouseY.toFixed(2);\n        // console.log(msg);\n        for (var i = 0; i < this.measurementsArray.length; i++) {\n            /** @type {?} */\n            var dot = this.coordinatesTips[i];\n            /** @type {?} */\n            var dx = mouseX - dot.x;\n            /** @type {?} */\n            var dy = mouseY - dot.y;\n            // console.log(`SparklineLine::handleMouseMove dx: ` + Math.floor(dx) + `, dy: ` + Math.floor(dy) + `, dot.rXr: ` + dot.rXr);\n            if (dx * dx + dy * dy < dot.rXr) {\n                // console.log(`SparklineLine::handleMouseMove found a match`);\n                // A trick to find the width of the canvas to host the tooltip\n                mySpan = document.createElement('span');\n                mySpan.id = 'mySpanId';\n                mySpan.style.font = fontDefinition;\n                mySpan.style.textAlign = 'center';\n                mySpan.innerHTML = '' + this.measurementsArray[i];\n                body = document.getElementsByTagName('body')[0];\n                body.appendChild(mySpan);\n                mySpan = document.getElementById('mySpanId');\n                width = mySpan.getBoundingClientRect().width + 2;\n                height = mySpan.getBoundingClientRect().height + 2;\n                mySpan.parentElement.removeChild(mySpan);\n                // console.log(`mySpan: ` + width);\n                // Remove tooltip if already there\n                tooltip = document.getElementById('rms-sparkline-inline-tooltip');\n                if (tooltip) {\n                    // console.log(`SparklineLine::handleMouseMove deleting tooltip`);\n                    tooltip.parentElement.removeChild(tooltip);\n                }\n                // Add a new tooltip\n                this.canvasTip = document.createElement('CANVAS');\n                this.canvasTip.id = 'rms-sparkline-inline-tooltip';\n                this.canvasTip.width = width;\n                this.canvasTip.height = height;\n                this.canvasTip.style.position = 'absolute';\n                this.canvasTip.style.left = ($event.clientX + 5) + 'px';\n                this.canvasTip.style.top = ($event.clientY + 7) + 'px';\n                this.canvasTip.style.border = '1px solid';\n                this.canvasTip.style.border = '1px solid';\n                this.canvasTip.style.zIndex = '20';\n                this.canvasTip.style.textAlign = 'center';\n                /** @type {?} */\n                var ctx = ((/** @type {?} */ (this.canvasTip))).getContext('2d');\n                ctx.fillStyle = 'white';\n                ctx.fillRect(0, 0, width, height);\n                ctx.fill();\n                ctx.fillStyle = 'red';\n                ctx.font = fontDefinition;\n                ctx.fillText('' + this.measurementsArray[i], 1, height - 2);\n                body = document.getElementsByTagName('body')[0];\n                body.appendChild(this.canvasTip);\n                break; // the first match gets the tooltip\n            }\n            else {\n                // Remove tooltip if still there\n                tooltip = document.getElementById('rms-sparkline-inline-tooltip');\n                if (tooltip) {\n                    // console.log(`SparklineLine::handleMouseMove deleting tooltip`);\n                    tooltip.parentElement.removeChild(tooltip);\n                }\n            }\n        }\n    };\n    LineService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root'\n                },] }\n    ];\n    /** @nocollapse */\n    LineService.ctorParameters = function () { return []; };\n    /** @nocollapse */ LineService.ngInjectableDef = defineInjectable({ factory: function LineService_Factory() { return new LineService(); }, token: LineService, providedIn: \"root\" });\n    return LineService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar SparkLineComponent = /** @class */ (function () {\n    function SparkLineComponent(lineService) {\n        this.lineService = lineService;\n    }\n    // see https://blog.angular-university.io/angular-viewchild/\n    // for recommendation to use ngAfterViewInit instead of ngOnInit\n    // see https://blog.angular-university.io/angular-viewchild/\n    // for recommendation to use ngAfterViewInit instead of ngOnInit\n    /**\n     * @return {?}\n     */\n    SparkLineComponent.prototype.ngAfterViewInit = \n    // see https://blog.angular-university.io/angular-viewchild/\n    // for recommendation to use ngAfterViewInit instead of ngOnInit\n    /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var decorationPoints = JSON.parse(this.decorationPointsString);\n        /** @type {?} */\n        var linePoints = JSON.parse(this.linePointsString);\n        // this.lineService.draw(this.sparklineCanvas, this.lineColor);\n        console.log('SparkLineComponent.ngAfterViewInit: about to call the line drawing');\n        this.lineService.draw1(this.className, decorationPoints, this.dotRadius, this.height, this.lineColor, linePoints, this.lineWidth, this.shadeColor, this.sparklineCanvas, this.width);\n    };\n    SparkLineComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'rms-spark-line',\n                    template: \"<canvas #sparklineCanvas width=\\\"128\\\" height=\\\"64\\\"></canvas>\\n\",\n                    styles: [\"\"]\n                }] }\n    ];\n    /** @nocollapse */\n    SparkLineComponent.ctorParameters = function () { return [\n        { type: LineService }\n    ]; };\n    SparkLineComponent.propDecorators = {\n        className: [{ type: Input }],\n        decorationPointsString: [{ type: Input, args: ['decorationPoints',] }],\n        dotRadius: [{ type: Input }],\n        height: [{ type: Input }],\n        lineColor: [{ type: Input }],\n        linePointsString: [{ type: Input, args: ['linePoints',] }],\n        lineWidth: [{ type: Input }],\n        shadeColor: [{ type: Input }],\n        width: [{ type: Input }],\n        sparklineCanvas: [{ type: ViewChild, args: ['sparklineCanvas',] }]\n    };\n    return SparkLineComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar LibraryModule = /** @class */ (function () {\n    function LibraryModule() {\n    }\n    LibraryModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        SparkBarchartComponent,\n                        SparkBoxplotComponent,\n                        SparkLineComponent,\n                    ],\n                    imports: [],\n                    exports: [\n                        SparkBarchartComponent,\n                        SparkBoxplotComponent,\n                        SparkLineComponent,\n                    ]\n                },] }\n    ];\n    return LibraryModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { LibraryService, LibraryModule, SparkBarchartComponent, SparkBoxplotComponent, SparkLineComponent, BarchartService as ɵa, BoxplotService as ɵb, LineService as ɵc };\n\n//# sourceMappingURL=library.js.map","<canvas #sparklineCanvas width=\"128\" height=\"64\"></canvas>\n","<canvas #sparklineCanvas width=\"128\" height=\"64\"></canvas>\n","<canvas #sparklineCanvas width=\"128\" height=\"64\"></canvas>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BarchartComponent } from './barchart/barchart.component';\nimport { BoxplotComponent } from './boxplot/boxplot.component';\nimport { InlineComponent } from './inline/inline.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\n\nconst appRoutes: Routes = [\n\t{ path: 'home',        component: LandingPageComponent },\n\n\t{ path: 'barchart',    component: BarchartComponent },\n\t{ path: 'boxplot',     component: BoxplotComponent },\n  { path: 'inline',      component: InlineComponent },\n\n\t{ path: '',   redirectTo: 'home', pathMatch: 'full' },\n\t{ path: '**', redirectTo: 'home', pathMatch: 'full'  }\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forRoot(\n\t\t\tappRoutes,\n\t\t\t{ enableTracing: false } // <-- debugging purposes only\n\t\t)\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class AppRoutingModule {}\n","<!--The content below is only a placeholder and can be replaced.-->\n<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <!-- span>Sparklines</span -->\n      <span><a id='myTitle' class =\"toolbar-home-link\" href=''>SPARKLINES</a><span style=\"font-size: 60%;\"> v{{version}}</span></span>\n\n      <!-- This fills the remaining space of the current row -->\n      <span class=\"example-fill-remaining-space\"></span>\n\n      <span>\n          <img class=\"rms-mat-card-avatar\" src=\"../assets/images/Rodrigo_Cropped.png\" alt=\"Rodrigo Silveira\">\n      </span>\n\n      <span>\n          <a mat-button href=\"https://www.linkedin.com/in/rodrigomattososilveira/\" target=\"_blank\">Rodrigo Silveira</a>\n      </span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<mat-drawer-container class=\"sidenav-container\">\n  <mat-drawer mode=\"side\" opened>\n    <h4>Sparklines</h4>\n    <mat-list>\n      <mat-list-item *ngFor=\"let sparkline of sparklines\">\n          <h4 mat-line>\n            <a mat-button [routerLink]=\"sparkline.routeLink\">{{sparkline.name}}</a>\n          </h4>\n      </mat-list-item>\n    </mat-list>\n  </mat-drawer>\n  <mat-drawer-content>\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'living-style-guide';\n  version =  `0.3.0`;\n  sparklines = [\n    {\n      name: 'Bar Chart',\n      icon: '',\n      routeLink: 'barchart'\n    },\n    {\n      name: 'Boxplot Chart',\n      icon: '',\n      routeLink: 'boxplot'\n    },\n    {\n      name: 'Inline',\n      icon: '',\n      routeLink: 'inline'\n    },\n  ];\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LibraryModule } from 'library';\nimport { BarchartComponent } from './barchart/barchart.component';\nimport { BoxplotComponent } from './boxplot/boxplot.component';\nimport { InlineComponent } from './inline/inline.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\n\nimport { LivingStyleGuideService } from './utils/services/living-style-guide.service';\nimport { AngularMaterialModuleModule } from './utils/angular-material-module/angular-material-module.module';\nimport { HttpModule } from '@angular/http';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { MarkdownModule, MarkedOptions } from 'ngx-markdown';\nimport { SparkLineSimpleComponent } from './inline/spark-line-simple/spark-line-simple.component';\nimport { SparkLineShadeComponent } from './inline/spark-line-shade/spark-line-shade.component';\nimport { SparkLineDecorationComponent } from './inline/spark-line-decoration/spark-line-decoration.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BarchartComponent,\n    BoxplotComponent,\n    InlineComponent,\n    LandingPageComponent,\n    SparkLineSimpleComponent,\n    SparkLineShadeComponent,\n    SparkLineDecorationComponent\n  ],\n  imports: [\n    AngularMaterialModuleModule,\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    LibraryModule,\n\tHttpModule,\n\tHttpClientModule,\n    MarkdownModule.forRoot({\n\t\tloader: HttpClient, // optional, only if you use [src] attribute\n\t\tmarkedOptions: {\n\t\t\tprovide: MarkedOptions,\n\t\t\tuseValue: {\n\t\t\t\tgfm: true,\n\t\t\t\ttables: true,\n\t\t\t\tbreaks: false,\n\t\t\t\tpedantic: false,\n\t\t\t\tsanitize: false,\n\t\t\t\tsmartLists: true,\n\t\t\t\tsmartypants: false,\n\t\t\t},\n\t\t},\n\t}),\n    ReactiveFormsModule,\n  ],\n  providers: [\n      LivingStyleGuideService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<rms-spark-barchart [spark_color] = \"app_color\" ></rms-spark-barchart>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-barchart',\n  templateUrl: './barchart.component.html',\n  styleUrls: ['./barchart.component.css']\n})\nexport class BarchartComponent implements OnInit {\n  app_color: string = 'red';\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<rms-spark-barchart [spark_color] = \"app_color\" ></rms-spark-barchart>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-boxplot',\n  templateUrl: './boxplot.component.html',\n  styleUrls: ['./boxplot.component.css']\n})\nexport class BoxplotComponent implements OnInit {\n  app_color: string = 'blue';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\n<mat-tab-group animationDuration=\"0ms\">\n    <mat-tab label=\"Examples\">\n        <mat-grid-list cols=\"3\" rowHeight=\"400\">\n        <mat-grid-tile>\n            <app-spark-line-simple></app-spark-line-simple>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <app-spark-line-decoration></app-spark-line-decoration>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <app-spark-line-shade></app-spark-line-shade>\n        </mat-grid-tile>\n        </mat-grid-list>\n    </mat-tab>\n    <mat-tab label=\"README\">\n        <markdown ngPreserveWhitespaces>\n        Description\n        ----\n        The `&lt;rms-spark-line&gt;` Angular custom component renders a simple sparkline including the following elements:\n        * a line\n        * optional decorating points, drawn along the line, e.g. min / max / start / end / alert. etc.\n        * an optional dropdown shade\n\n        The `&lt;rms-spark-line&gt;` Angular custom component renders the following  sparkline variations:\n        1. `simple`: A simple line, all points positive\n        1. `decorated`:  A simple line, all points positive, with decoration points alongside the line.\n        1. `shade`: Dual charts' bars heights are negative, zero, or positive, with a positive height bars drawn northward and negative ones southward.\n\n        ### Usage\n\n        Below is example of a sparkline inline drawn without a shade and with decorationpoints.\n        ````html\n          &lt;rms-sparkline-inline&gt;\n              [className]=\"className\"\n              [decorationPoints]=\"decorationPoints\"\n              [dotRadius]=\"dotRadius\"\n              [lineColor]=\"lineColor\"\n              [linePoints]=\"linePoints\"\n              [lineWidth]=\"lineWidth\"\n              [height]=\"height\"\n              [shadeColor]=\"shadeColor\"\n              [width]=\"width\"\n          &gt;\n          &lt;/rms-sparkline-inline&gt;\n        ````\n\n        ### Properties\n        * `className: string`: The classe names to be added to the canvas element. Default is no classes;\n        * `decorationPoints: string` An array of objects describing decoration points,  e.g. min / max / start / end / alert. etc. See below for formating details;\n        * `dotRadius: Number`: The size of the decoration dots;\n        * `lineColor: string`: The color of the sparkline; any valid CSS color;\n        * `linePoints: string`: An array of numbers representing the sparkline data source. Default is empty array. See below for formating details;\n        * `lineWidth: number`: A number giving the stroke of the line in pixels. Default is 1;\n        * `width: number`: The width of the sparkline box in pixels;\n        * `shadeColor: string`: The color of to shade the area underneath the sparkline;\n        * `height: number`: The height of the sparkline box in pixels;\n\n        #### linePoints\n        A JOSN.stringfy'd string of a simple sequence of values representing f(x), with x being equally spaced units across the horizontal axis, as for instance:\n        ````typescript\n          linePoints: string = JSON.stringify([4, 3, 7, 8, 1, 4, 9, 2, 5, 3, 5, 5, 8 , 9, 7, 1]);\n        ````\n\n        Assuming the default width, 64 pixels, fifteen segments would will be drawn, four pixels wide. There are two decorations this example, one red dot indexed to be drawn over the line point of index 0 and one black dot indexed to be drawn over the line point of index 15. Considering the linepoints example above, these decorations would represent the sparkline's start and end points.\n\n        #### decorationPoints\n        A JOSN.stringfy'd string array of objectss describing the decoration points, as for instance the first point of the line and the last point of the line:\n        ````typescript\n        \tdecorationPoints: string = decorationPoints = JSON.stringify(\n            [\n                &#123;index: 0, color: 'red'&#125;,\n                &#123;index: 11, color: 'black&#125;'\n            ]);\n        ````\n\n        ### Methods\n        none\n\n        ### Events Received\n        none\n\n        ### Events Emitted\n        none\n\n        # Last but not least\n        ````html\n        _   _                   _____\n        | | | | __ ___   _____  |  ___|   _ _ __\n        | |_| |/ _` \\ \\ / / _ \\ | |_ | | | | '_ \\\n        |  _  | (_| |\\ V /  __/ |  _|| |_| | | | |\n        |_| |_|\\__,_| \\_/ \\___| |_|   \\__,_|_| |_|\n        ````\n        </markdown>\n    </mat-tab>\n    <mat-tab label=\"TBD\">TBD</mat-tab>\n</mat-tab-group>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inline',\n  templateUrl: './inline.component.html',\n  styleUrls: ['./inline.component.css']\n})\nexport class InlineComponent implements OnInit {\n  app_color: string = 'yellow';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n        <mat-card-title class=\"mat-card-title-rms\">Sparkline type: Line</mat-card-title>\n        <mat-card-subtitle>Chart type: Decorated</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n            <rms-spark-line\n                [className] = \"className\"\n                [decorationPoints] = \"decorationPoints\"\n                [dotRadius] = \"dotRadius\"\n                [height] = \"height\"\n                [lineColor] = \"lineColor\"\n                [linePoints] = \"linePoints\"\n                [lineWidth] = \"lineWidth\"\n                [shadeColor] = \"shadeColor\"\n                [width] = \"width\"\n            >\n            </rms-spark-line>\n        </p>\n        <h4>Highlights</h4>\n        <markdown ngPreserveWhitespaces>\n            Move mouse alongside lines to see their values\n        </markdown>\n    </mat-card-content>\n    <mat-card-actions>\n        <h4>Source References</h4>\n        <markdown ngPreserveWhitespaces>\n            - [Component]({{branchURL_lib}})\n            - [Usage]({{branchURL_lsg}})\n        </markdown>\n    </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { LivingStyleGuideService } from '../../utils/services/living-style-guide.service';\n\n@Component({\n    selector: 'app-spark-line-decoration',\n    templateUrl: './spark-line-decoration.component.html',\n    styleUrls: ['./spark-line-decoration.component.css']\n})\nexport class SparkLineDecorationComponent implements OnInit {\n    // Class(es) to be added to the canvas element.\n    className = '';\n\n    // Decoration points objects\n    decorationPoints = JSON.stringify([{index: 0, color: 'red'}, {index: 11, color: 'black'}]);\n\n    // A number giving the size of the dots used to mark important values.\n    dotRadius = 1.5;\n\n    // A number giving the height of the sparkline box in pixels. By default, uses the height of the Canvas element.\n    height = 32;\n\n    // A string giving the color of the sparkline. Any valid CSS color.\n    lineColor = 'DarkGrey';\n\n    // The sparkline data source\n    linePoints = JSON.stringify([4, 3, 7, 8, 1, 4, 9, 2, 5, 3, 5, 9]);\n\n    // A number giving the stroke of the line in pixels.\n    lineWidth = 1.5;\n\n    // A string giving the color of the dot marking the highest value. Any valid CSS color.\n    shadeColor = '';\n\n    // A number giving the width of the sparkline box in pixels.\n    width = 128;\n\n    leaf_lib: string = 'projects/library/src/lib/spark-line'\n    leaf_lsg: string = 'projects/living-style-guide/src/app/inline/spark-line-decoration'\n    branchURL_lib: string = \"\";\n    branchURL_lsg: string = \"\";\n\n    constructor(private livingStyleGuideService: LivingStyleGuideService) { }\n\n    ngOnInit() {\n        this.branchURL_lib = this.livingStyleGuideService.branchURL(this.leaf_lib);\n        this.branchURL_lsg = this.livingStyleGuideService.branchURL(this.leaf_lsg);\n    }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n        <mat-card-title class=\"mat-card-title-rms\">Sparkline type: Line</mat-card-title>\n        <mat-card-subtitle>Chart type: Shaded</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n            <rms-spark-line\n                [className] = \"className\"\n                [decorationPoints] = \"decorationPoints\"\n                [dotRadius] = \"dotRadius\"\n                [height] = \"height\"\n                [lineColor] = \"lineColor\"\n                [linePoints] = \"linePoints\"\n                [lineWidth] = \"lineWidth\"\n                [shadeColor] = \"shadeColor\"\n                [width] = \"width\"\n            >\n            </rms-spark-line>\n        </p>\n        <h4>Highlights</h4>\n        <markdown ngPreserveWhitespaces>\n            Move mouse alongside lines to see their values\n        </markdown>\n    </mat-card-content>\n    <mat-card-actions>\n        <h4>Source References</h4>\n        <markdown ngPreserveWhitespaces>\n            - [Component]({{branchURL_lib}})\n            - [Usage]({{branchURL_lsg}})\n        </markdown>\n    </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { LivingStyleGuideService } from '../../utils/services/living-style-guide.service';\n\n@Component({\n    selector: 'app-spark-line-shade',\n    templateUrl: './spark-line-shade.component.html',\n    styleUrls: ['./spark-line-shade.component.css']\n})\nexport class SparkLineShadeComponent implements OnInit {\n    // Class(es) to be added to the canvas element.\n    className = '';\n\n    // Decoration points objects\n    decorationPoints = JSON.stringify([{index: 0, color: 'red'}, {index: 11, color: 'black'}]);\n\n    // A number giving the size of the dots used to mark important values.\n    dotRadius = 1.5;\n\n    // A number giving the height of the sparkline box in pixels. By default, uses the height of the Canvas element.\n    height = 32;\n\n    // A string giving the color of the sparkline. Any valid CSS color.\n    lineColor = 'DarkGrey';\n\n    // The sparkline data source\n    linePoints = JSON.stringify([4, 3, 7, 8, 1, 4, 9, 2, 5, 3, 5, 9]);\n\n    // A number giving the stroke of the line in pixels.\n    lineWidth = 1.5;\n\n    // A string giving the color of the dot marking the highest value. Any valid CSS color.\n    shadeColor = `LightBlue`;\n\n    // A number giving the width of the sparkline box in pixels.\n    width = 128;\n\n    leaf_lib: string = 'pprojects/library/src/lib/spark-line'\n    leaf_lsg: string = 'projects/living-style-guide/src/app/inline/spark-line-shade'\n    branchURL_lib: string = \"\";\n    branchURL_lsg: string = \"\";\n\n    constructor(private livingStyleGuideService: LivingStyleGuideService) { }\n\n    ngOnInit() {\n        this.branchURL_lib = this.livingStyleGuideService.branchURL(this.leaf_lib);\n        this.branchURL_lsg = this.livingStyleGuideService.branchURL(this.leaf_lsg);\n    }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n        <mat-card-title class=\"mat-card-title-rms\">Sparkline type: Line</mat-card-title>\n        <mat-card-subtitle>Chart type: Simple</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n            <rms-spark-line\n                [className] = \"className\"\n                [decorationPoints] = \"decorationPoints\"\n                [dotRadius] = \"dotRadius\"\n                [height] = \"height\"\n                [lineColor] = \"lineColor\"\n                [linePoints] = \"linePoints\"\n                [lineWidth] = \"lineWidth\"\n                [shadeColor] = \"shadeColor\"\n                [width] = \"width\"\n            >\n            </rms-spark-line>\n        </p>\n        <h4>Highlights</h4>\n        <markdown ngPreserveWhitespaces>\n            Move mouse alongside lines to see their values\n        </markdown>\n    </mat-card-content>\n    <mat-card-actions>\n        <h4>Source References</h4>\n        <markdown ngPreserveWhitespaces>\n            - [Component]({{branchURL_lib}})\n            - [Usage]({{branchURL_lsg}})\n        </markdown>\n    </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { LivingStyleGuideService } from '../../utils/services/living-style-guide.service';\n\n@Component({\n    selector: 'app-spark-line-simple',\n    templateUrl: './spark-line-simple.component.html',\n    styleUrls: ['./spark-line-simple.component.css']\n})\nexport class SparkLineSimpleComponent implements OnInit {\n    // Class(es) to be added to the canvas element.\n\tclassName = '';\n\n\t// Decoration points objects\n\tdecorationPoints = JSON.stringify([]);\n\n\t// A number giving the size of the dots used to mark important values.\n\tdotRadius = 1.5;\n\n\t// A number giving the height of the sparkline box in pixels. By default, uses the height of the Canvas element.\n\theight = 32;\n\n\t// A string giving the color of the sparkline. Any valid CSS color.\n\tlineColor = 'DarkGrey';\n\n\t// The sparkline data source\n\tlinePoints = JSON.stringify([4, 3, 7, 8, 1, 4, 9, 2, 5, 3, 5, 9]);\n\n\t// A number giving the stroke of the line in pixels.\n\tlineWidth = 1.5;\n\n\t// A string giving the color of the dot marking the highest value. Any valid CSS color.\n\tshadeColor = ``;\n\n\t// A number giving the width of the sparkline box in pixels.\n\twidth = 128;\n\n    leaf_lib: string = 'projects/library/src/lib/spark-line'\n    leaf_lsg: string = 'projects/living-style-guide/src/app/inline/spark-line-simple'\n    branchURL_lib: string = \"\";\n    branchURL_lsg: string = \"\";\n\n    constructor(private livingStyleGuideService: LivingStyleGuideService) { }\n\n    ngOnInit() {\n        this.branchURL_lib = this.livingStyleGuideService.branchURL(this.leaf_lib);\n        this.branchURL_lsg = this.livingStyleGuideService.branchURL(this.leaf_lsg);\n    }\n}\n","<markdown ngPreserveWhitespaces>\n# Description\nThis is a collection of Angular components to render [sparklines](https://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0001OR), conceived by [Edward Tufte](https://www.edwardtufte.com/tufte/). My motivation for this project is to use web component technology to implement sparklines. The project's overall concepts, but not source code, borrows extensively from [Gareth Watts](https://omnipotent.net/jquery.sparkline/#s-about) jQery project.\n\nOriginally this was an experiment to build sparklines using Web Components in order to me to learn the underlining Web Component architecture and how to integrate them in to Web Applications. This worked, although the architecture I used to collect my components into a library was incompatible with the framework I used to build and test them, [@nutmeg/cli](https://github.com/abraham/nutmeg-cli). The main challenge was to isolate common drawing logic from component and test logic.\n\nI decided that life should not be that hard and decided to wait for the new [Angular Workspace](https://angular.io/guide/workspace-config) architecture to estabilize. Now that it is stable, I decided to migrate the legacy project to Angular Workspace.\n\n### Source code\nOne of the nice aspects of Angular Workspace is that it supports hosting the library components and the living style guide (Angaular's test application) in the same [repository](https://github.com/RodrigoMattosoSilveira/rms-sparklines):\n- See the `library` folder for the Angular Components to draw sparklines;\n- See `living-style-guide` folder for this application, showing how to use the Angular Components;\n\n````html\n_    _                   _____\n| | | | __ ___   _____  |  ___|   _ _ __\n| |_| |/ _` \\ \\ / / _ \\ | |_ | | | | '_ \\\n|  _  | (_| |\\ V /  __/ |  _|| |_| | | | |\n|_| |_|\\__,_| \\_/ \\___| |_|   \\__,_|_| |_|\n````\n</markdown>\n\n<img mat-card-image src=\"./../../assets/images/sparklines.png\" alt=\"Sparlines Illustration\">\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {CdkTableModule} from '@angular/cdk/table';\n\nimport {\n\tMatAutocompleteModule,\n\tMatButtonModule,\n\tMatButtonToggleModule,\n\tMatCardModule,\n\tMatCheckboxModule,\n\tMatChipsModule,\n\tMatDatepickerModule,\n\tMatDialogModule,\n\tMatExpansionModule,\n\tMatGridListModule,\n\tMatIconModule,\n\tMatInputModule,\n\tMatListModule,\n\tMatMenuModule,\n\tMatNativeDateModule,\n\tMatPaginatorModule,\n\tMatProgressBarModule,\n\tMatProgressSpinnerModule,\n\tMatRadioModule,\n\tMatRippleModule,\n\tMatSelectModule,\n\tMatSidenavModule,\n\tMatSliderModule,\n\tMatSlideToggleModule,\n\tMatSnackBarModule,\n\tMatSortModule,\n\tMatTableModule,\n\tMatTabsModule,\n\tMatToolbarModule,\n\tMatTooltipModule,\n\tMatStepperModule,\n} from '@angular/material';\n\nconst ANGULAR_MATERIAL_MODULES = [\n\tCdkTableModule,\n\tMatAutocompleteModule,\n\tMatButtonModule,\n\tMatButtonToggleModule,\n\tMatCardModule,\n\tMatCheckboxModule,\n\tMatChipsModule,\n\tMatDatepickerModule,\n\tMatDialogModule,\n\tMatExpansionModule,\n\tMatGridListModule,\n\tMatIconModule,\n\tMatInputModule,\n\tMatListModule,\n\tMatMenuModule,\n\tMatNativeDateModule,\n\tMatPaginatorModule,\n\tMatProgressBarModule,\n\tMatProgressSpinnerModule,\n\tMatRadioModule,\n\tMatRippleModule,\n\tMatSelectModule,\n\tMatSidenavModule,\n\tMatSliderModule,\n\tMatSlideToggleModule,\n\tMatSnackBarModule,\n\tMatSortModule,\n\tMatTableModule,\n\tMatTabsModule,\n\tMatToolbarModule,\n\tMatTooltipModule,\n\tMatStepperModule,\n\n];\n\n@NgModule({\n  declarations: [],\n\timports: ANGULAR_MATERIAL_MODULES,\n\texports:  ANGULAR_MATERIAL_MODULES\n})\nexport class AngularMaterialModuleModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LivingStyleGuideService {\n    private _root:string = \"https://github.com/RodrigoMattosoSilveira/rms-sparklines/tree\";\n    private _branch:string = \"issue-44-ng7\";\n\n    constructor() { }\n\n    /**\n    A service method to return a link to source in the repository. The\n    repository and branch are kept in this service; the leaf is provided by the\n    caller\n\n    Input\n        leaf: string\n    Output\n        URL: string\n    **/\n    branchURL(leaf:string):string {\n        return this._root + \"/\" + this._branch + \"/\" + leaf;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}